// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from file_storage_provider.djinni

#pragma once

#include "../../../../../../src/gen/i_file_storage_provider.hpp"
#include "djinni_support.hpp"

namespace djinni_generated {

class IFileStorageProvider final : ::djinni::JniInterface<::ari::IFileStorageProvider, IFileStorageProvider> {
public:
    using CppType = std::shared_ptr<::ari::IFileStorageProvider>;
    using CppOptType = std::shared_ptr<::ari::IFileStorageProvider>;
    using JniType = jobject;

    using Boxed = IFileStorageProvider;

    ~IFileStorageProvider();

    static CppType toCpp(JNIEnv* jniEnv, JniType j) { return ::djinni::JniClass<IFileStorageProvider>::get()._fromJava(jniEnv, j); }
    static ::djinni::LocalRef<JniType> fromCppOpt(JNIEnv* jniEnv, const CppOptType& c) { return {jniEnv, ::djinni::JniClass<IFileStorageProvider>::get()._toJava(jniEnv, c)}; }
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c) { return fromCppOpt(jniEnv, c); }

private:
    IFileStorageProvider();
    friend ::djinni::JniClass<IFileStorageProvider>;
    friend ::djinni::JniInterface<::ari::IFileStorageProvider, IFileStorageProvider>;

    class JavaProxy final : ::djinni::JavaProxyHandle<JavaProxy>, public ::ari::IFileStorageProvider
    {
    public:
        JavaProxy(JniType j);
        ~JavaProxy();

        std::string getDocumentPath(const std::string & relative) override;

    private:
        friend ::djinni::JniInterface<::ari::IFileStorageProvider, ::djinni_generated::IFileStorageProvider>;
    };

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("com/linkedu/core/IFileStorageProvider") };
    const jmethodID method_getDocumentPath { ::djinni::jniGetMethodID(clazz.get(), "getDocumentPath", "(Ljava/lang/String;)Ljava/lang/String;") };
};

}  // namespace djinni_generated
