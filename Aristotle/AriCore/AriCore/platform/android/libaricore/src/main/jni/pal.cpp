// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from pal_bundle.djinni

#include "pal.hpp"  // my header
#include "i_pal_bundle.hpp"

namespace djinni_generated {

Pal::Pal() : ::djinni::JniInterface<::ari::Pal, Pal>("com/linkedu/core/Pal$CppProxy") {}

Pal::~Pal() = default;


CJNIEXPORT void JNICALL Java_com_linkedu_core_Pal_00024CppProxy_nativeDestroy(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        delete reinterpret_cast<::djinni::CppProxyHandle<::ari::Pal>*>(nativeRef);
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_linkedu_core_Pal_setPalBundle(JNIEnv* jniEnv, jobject /*this*/, jobject j_bundle)
{
    try {
        DJINNI_FUNCTION_PROLOGUE0(jniEnv);
        ::ari::Pal::setPalBundle(::djinni_generated::IPalBundle::toCpp(jniEnv, j_bundle));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT jobject JNICALL Java_com_linkedu_core_Pal_getPalBundle(JNIEnv* jniEnv, jobject /*this*/)
{
    try {
        DJINNI_FUNCTION_PROLOGUE0(jniEnv);
        auto r = ::ari::Pal::getPalBundle();
        return ::djinni::release(::djinni_generated::IPalBundle::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

}  // namespace djinni_generated
