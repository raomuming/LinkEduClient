// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from pal_bundle.djinni

#pragma once

#include "../../../../../../src/gen/i_pal_bundle.hpp"
#include "djinni_support.hpp"

namespace djinni_generated {

class IPalBundle final : ::djinni::JniInterface<::ari::IPalBundle, IPalBundle> {
public:
    using CppType = std::shared_ptr<::ari::IPalBundle>;
    using CppOptType = std::shared_ptr<::ari::IPalBundle>;
    using JniType = jobject;

    using Boxed = IPalBundle;

    ~IPalBundle();

    static CppType toCpp(JNIEnv* jniEnv, JniType j) { return ::djinni::JniClass<IPalBundle>::get()._fromJava(jniEnv, j); }
    static ::djinni::LocalRef<JniType> fromCppOpt(JNIEnv* jniEnv, const CppOptType& c) { return {jniEnv, ::djinni::JniClass<IPalBundle>::get()._toJava(jniEnv, c)}; }
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c) { return fromCppOpt(jniEnv, c); }

private:
    IPalBundle();
    friend ::djinni::JniClass<IPalBundle>;
    friend ::djinni::JniInterface<::ari::IPalBundle, IPalBundle>;

    class JavaProxy final : ::djinni::JavaProxyHandle<JavaProxy>, public ::ari::IPalBundle
    {
    public:
        JavaProxy(JniType j);
        ~JavaProxy();

        std::shared_ptr<::ari::IFileStorageProvider> getFileStorageProvider() override;

    private:
        friend ::djinni::JniInterface<::ari::IPalBundle, ::djinni_generated::IPalBundle>;
    };

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("com/linkedu/core/IPalBundle") };
    const jmethodID method_getFileStorageProvider { ::djinni::jniGetMethodID(clazz.get(), "getFileStorageProvider", "()Lcom/linkedu/core/IFileStorageProvider;") };
};

}  // namespace djinni_generated
