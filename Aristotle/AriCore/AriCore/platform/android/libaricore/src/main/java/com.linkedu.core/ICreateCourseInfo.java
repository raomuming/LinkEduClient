// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from course.djinni

package com.linkedu.core;

import java.util.concurrent.atomic.AtomicBoolean;

public abstract class ICreateCourseInfo {
    public abstract void setName(String name);

    public abstract String getName();

    public abstract void setDescription(String description);

    public abstract String getDescription();

    public abstract void setStartTime(long time);

    public abstract long getStartTime();

    public abstract void setEndTime(long time);

    public abstract long getEndTime();

    public static native ICreateCourseInfo newCreateCourseInfo();

    private static final class CppProxy extends ICreateCourseInfo
    {
        private final long nativeRef;
        private final AtomicBoolean destroyed = new AtomicBoolean(false);

        private CppProxy(long nativeRef)
        {
            if (nativeRef == 0) throw new RuntimeException("nativeRef is zero");
            this.nativeRef = nativeRef;
        }

        private native void nativeDestroy(long nativeRef);
        public void destroy()
        {
            boolean destroyed = this.destroyed.getAndSet(true);
            if (!destroyed) nativeDestroy(this.nativeRef);
        }
        protected void finalize() throws java.lang.Throwable
        {
            destroy();
            super.finalize();
        }

        @Override
        public void setName(String name)
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            native_setName(this.nativeRef, name);
        }
        private native void native_setName(long _nativeRef, String name);

        @Override
        public String getName()
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            return native_getName(this.nativeRef);
        }
        private native String native_getName(long _nativeRef);

        @Override
        public void setDescription(String description)
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            native_setDescription(this.nativeRef, description);
        }
        private native void native_setDescription(long _nativeRef, String description);

        @Override
        public String getDescription()
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            return native_getDescription(this.nativeRef);
        }
        private native String native_getDescription(long _nativeRef);

        @Override
        public void setStartTime(long time)
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            native_setStartTime(this.nativeRef, time);
        }
        private native void native_setStartTime(long _nativeRef, long time);

        @Override
        public long getStartTime()
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            return native_getStartTime(this.nativeRef);
        }
        private native long native_getStartTime(long _nativeRef);

        @Override
        public void setEndTime(long time)
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            native_setEndTime(this.nativeRef, time);
        }
        private native void native_setEndTime(long _nativeRef, long time);

        @Override
        public long getEndTime()
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            return native_getEndTime(this.nativeRef);
        }
        private native long native_getEndTime(long _nativeRef);
    }
}
